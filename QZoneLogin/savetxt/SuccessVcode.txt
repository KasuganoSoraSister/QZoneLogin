using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.IO;
using System.Drawing;
using System.Security.Cryptography;
using System.Net;

namespace testWebRequest
{
    public class Program
    {
        public static String qq = "444132348";
        private static String password = "ilove1314=";
        
        static void Main(String[] args)
        {
            QQLogin(qq, password);
        }

        public static void QQLogin(String QQ, String password)
        {
            String oauthToken = "d997f0029a334f9e9d1e753bbe404295";
            String pass = "";
            String responseData = "";
            HttpHelper helper = new HttpHelper();

            //获取sessionkey
            String forPrepare = "http://open.t.qq.com/cgi-bin/authorize?oauth_token=" + oauthToken;
            List<RetData> outcomeFromPrepare = new List<RetData>();
            CookieContainer cookieNull = new CookieContainer();
            String strHTML;
            String referer1 = "http://open.t.qq.com";
            outcomeFromPrepare = helper.GetHtml(referer1,forPrepare, cookieNull);
            strHTML = outcomeFromPrepare[0].str;
            int flag = strHTML.IndexOf("sessionKey=");
            String sessionKey = strHTML.Substring(flag + 11, 32);
            //Console.WriteLine("sessionKey : " + sessionKey);

            String referer = "http://ui.ptlogin2.qq.com/cgi-bin/login?appid=46000101&s_url=http%3A%2F%2Fopen.t.qq.com%2Fcgi-bin%2Fauthorize%3Foauth_token%3D" + oauthToken + "%26checkStatus%3Dchecked%26checkType%3Dauthorize%26sessionKey%3D" + sessionKey + "&proxy_url=http%3A%2F%2Fopen.t.qq.com%2Fcgi-bin%2Fproxy%3Fcallback%3DonFrameResize&f_url=loginerroralert&style=13&daid=6&pt_no_auth=1&hide_close_icon=1&link_target=blank&target=blank&hide_title_bar=1&no_drop_domain=1&dummy=1&bgcolor=ffffff";

            //获取验证信息
            //验证信息格式为：ptui_checkVC('0','!MIW','\x00\x00\x00\x00\x9a\x65\x0f\xd7') 
            //其中分为三部分，第一个值0或1判断是否需要图片验证码
            //                          第二个值是默认验证码，若不需要图片验证码，就用此验证码来提交
            //                          第三部分是所使用的QQ号码的16进制形式
            String forCheckUrl = "http://check.ptlogin2.qq.com/check?uin=" + QQ + "&appid=46000101&u1=http%3A%2F%2Fopen.t.qq.com%2Fcgi-bin%2Fauthorize%3Foauth_token%3D" + oauthToken + "%26checkStatus%3Dchecked%26checkType%3Dauthorize%26sessionKey%3D" + sessionKey;
            List<RetData> outcomeFromCheck = new List<RetData>();
            String receiveFromCheck;
            outcomeFromCheck = helper.GetHtml(referer, forCheckUrl, outcomeFromPrepare[0].cookie);
            receiveFromCheck = outcomeFromCheck[0].str;
            Console.WriteLine(receiveFromCheck); //打印获取的验证内容

            //将验证码信息的三部分存入数组
            String check = receiveFromCheck.Substring(receiveFromCheck.IndexOf("(") + 1, receiveFromCheck.LastIndexOf(")") - receiveFromCheck.IndexOf("(") - 1);
            String[] checkNum = check.Replace("'", "").Split(',');  //验证码数组
            if ("1".Equals(checkNum[0])) //判断是否需要图片验证码
            {
                String forImageUrl = "http://captcha.qq.com/getimage?aid=549000912&r=0.3478789969909082&uin=" + QQ + "&vc_type=" + checkNum[1] + "";
                Stream receiveStream = helper.GetStream(referer, forImageUrl, outcomeFromCheck[0].cookie);
                //将获取的图片验证码存入电脑
                System.Drawing.Image.FromStream(receiveStream).Save(@"d:/code.jpg");
                Image img = Image.FromStream(receiveStream);
                responseData = "XXXX"; //将读取到的图片验证码输入到responseData中
            }
            else  //若不需图片验证码，验证码就等于checkNum[1]
            {
                responseData = checkNum[1];
            }

            //获取加密密码
            PasswordHelper passHelper = new PasswordHelper();
            pass = passHelper.GetPassword(QQ, password, responseData);
            //Console.WriteLine("Encrypted Password :"+pass);

            /** *********************** 登录 *************************** */
            String forLoginUrl = "http://ptlogin2.qq.com/login?u=" + QQ + "&p=" + pass + "&verifycode=" + responseData + "&aid=46000101&u1=http%3A%2F%2Fopen.t.qq.com%2Fcgi-bin%2Fauthorize%3Foauth_token%3D" + oauthToken + "%26checkStatus%3Dchecked%26checkType%3Dauthorize%26sessionKey%3D" + sessionKey + "%3Df43c743a7df819481b7016dbc5906adc&h=1&ptredirect=1&ptlang=2052&daid=6&from_ui=1&dumy=&low_login_enable=0&regmaster=&fp=loginerroralert&action=5-13-1397633736826&mibao_css=&t=1&g=1&js_ver=10074&js_type=1";
            List<RetData> outcomeFromLogin = new List<RetData>();
            outcomeFromLogin = helper.GetHtml(referer, forLoginUrl, outcomeFromCheck[0].cookie);
            String revFromLogin = outcomeFromLogin[0].str;
            Console.WriteLine(revFromLogin);  //打印登录后返回信息
            //至此登录成功

            //取出登陆成功后返回的ptsig，下一步要用
            int ptsigPosition = revFromLogin.IndexOf("ptsig=")+6;
            String ptsig = revFromLogin.Substring(ptsigPosition, revFromLogin.IndexOf("&s_url") - ptsigPosition);
            //Console.WriteLine("ptsig= "+ptsig);

            //获取下一步需要的cookie（pt4_token、p_uin、p_skey）
            String checkSigUrl = "http://ptlogin4.t.qq.com/check_sig?pttype=1&uin=" + QQ + "&service=login&nodirect=0&ptsig="+ptsig+"&s_url=http%3A%2F%2Fopen.t.qq.com%2Fcgi-bin%2Fauthorize%3Foauth_token%3D" + oauthToken + "%26checkStatus%3Dchecked%26checkType%3Dauthorize%26sessionKey%3D" + sessionKey + "&f_url=&ptlang=2052&ptredirect=101&aid=46000101&daid=6";
            List<RetData> outcomeFromSig = new List<RetData>();
            outcomeFromSig = helper.GetHtml(referer, checkSigUrl, outcomeFromLogin[0].cookie);
 
            String getVcodeUrl = "http://open.t.qq.com/cgi-bin/authorize?oauth_token=" + oauthToken + "&checkStatus=checked&checkType=authorize&sessionKey=" + sessionKey;
            List<RetData> outcomeFromVcode = new List<RetData>();
            outcomeFromVcode = helper.GetHtml(referer, getVcodeUrl, outcomeFromSig[0].cookie);
            Console.WriteLine(outcomeFromVcode[0].str);
 
            //遍历CookieContainer

            //GetCookieContent showCookies = new GetCookieContent();
            //showCookies.ShowAllCookies(outcomeFromPrepare[0].cookie);
            //showCookies.ShowAllCookies(outcomeFromCheck[0].cookie);
            //showCookies.ShowAllCookies(outcomeFromLogin[0].cookie);
            //showCookies.ShowAllCookies(outcomeFromSig[0].cookie);

            /*将结果写入txt
            StreamWriter swrite = new StreamWriter("E:/11.txt", false, Encoding.UTF8);
            swrite.WriteLine(strHTML);
            swrite.WriteLine(outcomeFromCheck[0].str);
            swrite.WriteLine(outcomeFromLogin[0].str);
            swrite.Close();
            swrite.Dispose();
             */
        }
    }

    public class RetData
    {
        public string str;
        public CookieContainer cookie;

        public RetData(string st, CookieContainer coo)
        {
            this.str = st;
            this.cookie = coo;
        }

        public string getstr
        {
            get { return str; }
        }
        public CookieContainer getcookie
        {
            get { return cookie; }
        }
    }

}


